setwd("~/Dropbox/ccpe/experimento-4-draco-ufrgs-kill-a-watt-ipmi-pcm")
knitr::opts_chunk$set(echo = TRUE)
ipmi <- read.csv("parsed-ipmi.csv", sep=";", header=T)
ipmi <- read.csv("parsed-ipmi.csv", sep=";", header=T)
sensor <- read.csv("parsed-video.csv", sep=";", header=T)
ggplot(ipmi, aes(x = timestamp; y = power)) + geom_line();
ggplot(ipmi, aes(x = timestamp; y = power)) + geom_line()
ggplot(ipmi, aes(x = timestamp, y = power)) + geom_line();
library(plyr)
library(ggplot2)
ggplot(ipmi, aes(x = timestamp, y = power)) + geom_line();
ipmi$teste = as.POSIXlt(ipmi$timestamp)
ipmi$teste
View(ipmi)
ipmi$timestamp <- as.POSIXlt(ipmi$timestamp)
ipmi$teste <- NULL
ipmi$timestamp
ggplot(ipmi, aes(x = timestamp, y = power)) + geom_line();
sensor$timestamp <- as.POSIXlt(sensor$timestamp)
sensor$timestamp
ggplot(ipmi, aes(x = timestamp, y = power)) + geom_line(color = "blue") + geom_line(sensor, aes(x = timestamp, y = power), color= "read");
View(sensor)
ipmi$source <- "IPMI"
sensor$source <- "KillAWatt"
df <- rbind(ipmi, sensor)
ggplot(df, aes(x = timestamp, y = power, color = source)) + geom_line();
setwd("~/Dropbox/ccpe/testes/experimento2")
t1 <- read.csv("tempo_pc+hdd1.csv", sep=";", header=T)
t1
t1 <- read.csv("tempo_pc+hdd1.csv", sep=";", header=T)
t2 <- read.csv("tempo_pc+ssd2.csv", sep=";", header=T)
t3 <- read.csv("tempo_cubie+hdd1.csv", sep=";", header=T)
t4 <- read.csv("tempo_cubie+ssd2.csv", sep=";", header=T)
t4 <- read.csv("tempo_cubie+ssd1.csv", sep=";", header=T)
tw
t4
tempo <- rbind(t1, t2, t3, t4)
tempo
("")
u1 <- read.csv("usage_pc+hdd1.csv", sep=";", header=T)
u1 <- read.csv("usage_pc+hdd1.csv", sep=";", header=T)
u1
u2 <- read.csv("usage_pc+ssd2.csv", sep=";", header=T)
u3 <- read.csv("usage_cubie+hdd1.csv", sep=";", header=T)
u4 <- read.csv("usage_cubie+ssd1.csv", sep=";", header=T)
usage <- rbind(u1, u2, u3, u4)
subset(usage, operation == "idle")
library(plyr)
library(ggplot2)
summary(usage)
usage_df <- ddply(usage, c("equipment", "device", "operation", "reqsize", "cache", "repetition"), summarize, median_cpu = median(cpu), max_cpu = max(cpu), min_cpu =min(cpu), median_mem = median(mem), max_mem = max(mem), min_mem = min(mem))
usage_df
clean_usage_df <- ddply(usage_df, c("equipment", "device", "operation", "reqsize", "cache"), summarize, cpu = median(median_cpu), mem = median(mem))
clean_usage_df <- ddply(usage_df, c("equipment", "device", "operation", "reqsize", "cache"), summarize, cpu = median(median_cpu), mem = median(median_mem))
clean_usage_df
library(plyr)
library(ggplot2)
t1 <- read.csv("tempo_pc+hdd1.csv", sep=";", header=T)
t2 <- read.csv("tempo_pc+ssd2.csv", sep=";", header=T)
t3 <- read.csv("tempo_cubie+hdd1.csv", sep=";", header=T)
t4 <- read.csv("tempo_cubie+ssd1.csv", sep=";", header=T) #file is named wrong, but measurements are okay
tempo <- rbind(t1, t2, t3, t4)
u1 <- read.csv("usage_pc+hdd1.csv", sep=";", header=T)
u2 <- read.csv("usage_pc+ssd2.csv", sep=";", header=T)
u3 <- read.csv("usage_cubie+hdd1.csv", sep=";", header=T)
u4 <- read.csv("usage_cubie+ssd1.csv", sep=";", header=T)
usage <- rbind(u1, u2, u3, u4)
usage_df <- ddply(usage, c("equipment", "device", "operation", "reqsize", "cache", "repetition"), summarize, median_cpu = median(cpu), max_cpu = max(cpu), min_cpu =min(cpu), median_mem = median(mem), max_mem = max(mem), min_mem = min(mem))
clean_usage_df <- ddply(usage_df, c("equipment", "device", "operation", "reqsize", "cache"), summarize, cpu = median(median_cpu), mem = median(median_mem))
summary(usage)
ggplot(subset(usage, equipment == "PC" & operation != "idle"), aes(x = measurement, y = cpu)) + geom_line() + facet_wrap(~device + repetition);
#subset(usage, equipment == "PC" )
ggplot(subset(usage, equipment == "pc" & operation != "idle"), aes(x = measurement, y = cpu)) + geom_line() + facet_wrap(~device + repetition);
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(ggplot2)
t1 <- read.csv("tempo_pc+hdd1.csv", sep=";", header=T)
t2 <- read.csv("tempo_pc+ssd2.csv", sep=";", header=T)
t3 <- read.csv("tempo_cubie+hdd1.csv", sep=";", header=T)
t4 <- read.csv("tempo_cubie+ssd1.csv", sep=";", header=T) #file is named wrong, but measurements are okay
tempo <- rbind(t1, t2, t3, t4)
u1 <- read.csv("usage_pc+hdd1.csv", sep=";", header=T)
u2 <- read.csv("usage_pc+ssd2.csv", sep=";", header=T)
u3 <- read.csv("usage_cubie+hdd1.csv", sep=";", header=T)
u4 <- read.csv("usage_cubie+ssd1.csv", sep=";", header=T)
usage <- rbind(u1, u2, u3, u4)
usage_df <- ddply(usage, c("equipment", "device", "operation", "reqsize", "cache", "repetition"), summarize, median_cpu = median(cpu), max_cpu = max(cpu), min_cpu =min(cpu), median_mem = median(mem), max_mem = max(mem), min_mem = min(mem))
clean_usage_df <- ddply(usage_df, c("equipment", "device", "operation", "reqsize", "cache"), summarize, cpu = median(median_cpu), mem = median(median_mem))
ggplot(subset(usage, equipment == "cubie" & operation != "idle"), aes(x = measurement, y = cpu)) + geom_line() + facet_wrap(~device + repetition);
ggplot(subset(usage, equipment == "cubie" & operation != "idle" & repetition == 1), aes(x = measurement, y = cpu)) + geom_line() + facet_wrap(~device + repetition);
#subset(usage, equipment == 'cubie' & operation != )
ggplot(subset(usage, equipment == "cubie" & operation != "idle"), aes(x = measurement, y = cpu)) + geom_line() + facet_wrap(~device + repetition + operation);
ggplot(subset(usage, equipment == "cubie" & operation != "idle"), aes(x = measurement, y = cpu, color = repetition)) + geom_line() + facet_wrap(~device + operation);
max(subset(usage, equipment == 'cubie')$cpu)
setwd("~/Dropbox/ccpe/experimento-4-draco-ufrgs-kill-a-watt-ipmi-pcm")
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(ggplot2)
ipmi <- read.csv("parsed-ipmi.csv", sep=";", header=T)
ipmi$timestamp <- as.POSIXlt(ipmi$timestamp)
ipmi$source <- "IPMI"
sensor <- read.csv("parsed-video.csv", sep=";", header=T)
sensor$timestamp <- as.POSIXlt(sensor$timestamp)
sensor$source <- "KillAWatt"
df <- rbind(ipmi, sensor)
summary(sensor$power)
summary(subset(sensor, power > 114)$power)
ipmi
idle <- read.csv("/home/fran/Downloads/idle.csv", sep=";", header=T)
idle
idle <- read.csv("parsed_idle.csv", sep=";", header=T)
idle
idle$timestamp = paste(idle$#)
a)
idle <- read.csv("parsed_idle.csv", sep=",", header=T)
idle
idle$timestamp <- paste(idle$Date, " ", idle$Time)
idle$timestamp
idle$timestamp <- paste(idle$Date, idle$Time)
idle$timestamp
idle$timestamp <- as.POSIXlt(idle$timestamp)
idle$timestamp
summary(idle)
idle$cpu_power <- idle$Proc_Energy
idle$mem_power <- idle$DRAM_Energy
ggplot(idle, aes(x = timestamp, y = cpu_power)) + geom_line()
ggplot(idle, aes(x = timestamp, y = mem_power)) + geom_line()
summary(idle$cpu_power)
summary(idle$mem_power)
knitr::opts_chunk$set(echo = TRUE)
idle_powersave <- read.csv("parsed_idle_powersave.csv", sep=",", header=T)
idle_powersave$timestamp <- paste(idle_powersave$Date, idle_powersave$Time)
idle_powersave$timestamp <- as.POSIXlt(idle_powersave$timestamp)
idle_powersave$cpu_power <- idle_powersave$Proc_Energy
idle_powersave$mem_power <- idle_powersave$DRAM_Energy
ggplot(idle_powersave, aes(x = timestamp, y = cpu_power)) + geom_line()
ggplot(idle_powersave, aes(x = timestamp, y = cpu_power)) + geom_line()
library(plyr)
library(ggplot2)
ggplot(idle_powersave, aes(x = timestamp, y = cpu_power)) + geom_line()
ggplot(idle_powersave, aes(x = timestamp, y = mem_power)) + geom_line()
idle_powersave <- read.csv("parsed_idle_powersave.csv", sep=",", header=T)
idle_powersave$timestamp <- paste(idle_powersave$Date, idle_powersave$Time)
idle_powersave$timestamp <- as.POSIXlt(idle_powersave$timestamp)
idle_powersave$cpu_power <- idle_powersave$Proc_Energy
idle_powersave$mem_power <- idle_powersave$DRAM_Energy
ggplot(idle_powersave, aes(x = timestamp, y = cpu_power)) + geom_line()
View(idle_powersave)
idle_powersave <- read.csv("parsed_idle_powersave.csv", sep=",", header=T)
idle_powersave$timestamp <- paste(idle_powersave$Date, idle_powersave$Time)
idle_powersave$timestamp <- as.POSIXlt(idle_powersave$timestamp)
idle_powersave$cpu_power <- idle_powersave$Proc_Energy
idle_powersave$mem_power <- idle_powersave$DRAM_Energy
ggplot(idle_powersave, aes(x = timestamp, y = cpu_power)) + geom_line()
ggplot(idle_powersave, aes(x = timestamp, y = mem_power)) + geom_line()
knitr::opts_chunk$set(echo = TRUE)
idle_powersave <- read.csv("parsed_idle_powersave.csv", sep=",", header=T)
idle_powersave$timestamp <- paste(idle_powersave$Date, idle_powersave$Time)
idle_powersave$timestamp <- as.POSIXlt(idle_powersave$timestamp)
idle_powersave$cpu_power <- idle_powersave$Proc_Energy
idle_powersave$mem_power <- idle_powersave$DRAM_Energy
summary(idle_powersave$cpu_power)
summary(idle_powersave$mem_power)
summary(idle_powersave$cpu_power)
summary(idle_powersave$mem_power)
setwd("~/Dropbox/ccpe/testes/Dados do cpufreq")
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(ggplot2)
dvfs1 <- read.csv("dvfs_PC+HDD1.csv", sep=";", header=T)
dvfs2 <- read.csv("dvfs_PC+SSD2.csv", sep=";", header=T)
dvfs <- rbind(dvfs1, dvfs2)
#combine all cpus into a single result
dvfs$sum <- dvfs$freq0 + dvfs$freq1 + dvfs$freq2 + dvfs$freq3 + dvfs$freq4 + dvfs$freq5 + dvfs$freq6 + dvfs$freq7
#combine the measurements during each experiment by taking the median
dvfs_df <- ddply(dvfs, c("equipment", "device", "operation", "reqsize", "cache", "repetition"), summarize, median = median(sum))
#combine the repetitions of each experiment by taking the median
clean_dvfs_df <- ddply(dvfs_df, c("equipment", "device", "operation", "reqsize", "cache"), summarize, sum = median(median))
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(ggplot2)
dvfs1 <- read.csv("dvfs_PC+HDD1.csv", sep=";", header=T)
dvfs2 <- read.csv("dvfs_PC+SSD2.csv", sep=";", header=T)
dvfs <- rbind(dvfs1, dvfs2)
#combine all cpus into a single result
dvfs$sum <- dvfs$freq0 + dvfs$freq1 + dvfs$freq2 + dvfs$freq3 + dvfs$freq4 + dvfs$freq5 + dvfs$freq6 + dvfs$freq7
#combine the measurements during each experiment by taking the median
dvfs_df <- ddply(dvfs, c("equipment", "device", "operation", "reqsize", "cache", "repetition"), summarize, median = median(sum))
#combine the repetitions of each experiment by taking the median
clean_dvfs_df <- ddply(dvfs_df, c("equipment", "device", "operation", "reqsize", "cache"), summarize, sum = median(median))
ggplot(subset(dvfs, device == "hdd1" & operation == "read" ), aes(x = measurement, y = sum)) + geom_line()  + facet_wrap(~repetition + reqsize);
ggplot(subset(dvfs, device == "hdd1" & operation == "read" ), aes(x = measurement, y = sum, group = repetition, color = repetition)) + geom_line()  + facet_wrap(~reqsize);
ggplot(subset(dvfs, device == "hdd1" ), aes(x = measurement, y = sum, group = repetition, color = repetition)) + geom_line()  + facet_wrap(~operation + reqsize);
dvfs1 <- read.csv("dvfs_PC+HDD1.csv", sep=";", header=T)
dvfs2 <- read.csv("dvfs_PC+SSD2.csv", sep=";", header=T)
dvfs <- rbind(dvfs1, dvfs2)
#combine all cpus into a single result
dvfs$sum <- dvfs$freq0 + dvfs$freq1 + dvfs$freq2 + dvfs$freq3 + dvfs$freq4 + dvfs$freq5 + dvfs$freq6 + dvfs$freq7
dvfs$sum <- dvfs$sum/2
#combine the measurements during each experiment by taking the median
dvfs_df <- ddply(dvfs, c("equipment", "device", "operation", "reqsize", "cache", "repetition"), summarize, median = median(sum))
#combine the repetitions of each experiment by taking the median
clean_dvfs_df <- ddply(dvfs_df, c("equipment", "device", "operation", "reqsize", "cache"), summarize, sum = median(median))
ggplot(subset(dvfs, device == "hdd1" ), aes(x = measurement, y = sum, group = repetition, color = repetition)) + geom_line()  + facet_wrap(~operation + reqsize);
ggplot(dvfs, aes(x = measurement, y = sum, group = repetition, color = repetition)) + geom_line()  + facet_wrap(~device + operation + reqsize);
dvfs_df <- ddply(dvfs, c("equipment", "device", "operation", "reqsize", "cache", "repetition"), summarize, median = median(sum))
clean_dvfs_df <- ddply(dvfs_df, c("equipment", "device", "operation", "reqsize", "cache"), summarize, sum = median(median))
clean_dvfs_df
summary(dvfs$repetition)
```{r}
ggplot(df, aes(x = measurement, y = power_cpu, group = repetition, color = repetition)) + geom_line() + ggtitle("CPU power") + facet_wrap(~operation + cache);
```
8227.25/12000
(12000 - 8227.25)/12000
(12000 - 8475.00)/12000
